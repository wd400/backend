syntax = "proto3";

package v1;

import "protos/common_types.proto";
import "protos/conversation.proto";
import "protos/feed.proto";
import "protos/login.proto";
import "protos/notifications.proto";
import "protos/qa.proto";
import "protos/replies.proto";
import "protos/search.proto";
import "protos/settings.proto";
import "protos/user.proto";
import "protos/visibility.proto";


import "googleapis/google/api/annotations.proto";

service Api {
    rpc Login (login.LoginRequest) returns (login.LoginResponse) {
        option (google.api.http) = {
            post: "/Login"
            body: "*"
          };
    }

    rpc RefreshToken(common_types.AuthenticatedRequest) returns (common_types.RefreshToken) {
        option (google.api.http) = {
            post: "/RefreshToken"
            body: "*"
          };       
    }

    rpc Logout(common_types.AuthenticatedRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/Logout"
            body: "*"
          };       
    }



    rpc Feed (feed.FeedRequest) returns (common_types.ConvHeaderList) {
        option (google.api.http) = {
            post: "/Feed"
            body: "*"
          };
    }

    rpc Search (search.SearchRequest) returns (search.SearchResponse) {
        option (google.api.http) = {
            post: "/Search"
            body: "*"
          };
    }

    rpc getInformations(common_types.AuthenticatedRequest) returns (settings.UserInformationsResponse) {
        option (google.api.http) = {
            post: "/GetInfos"
            body: "*"
          };
    }

    rpc changeInformations(settings.UserInformations) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/ChangeInfos"
            body: "*"
          };
    }

    //convid
    rpc DeclineInvitation(user.resourceRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/DeclineInvitation"
            body: "*"
          };
    }

    rpc BlockUser(user.blockRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/BlockUser"
            body: "*"
          };
    }

    rpc UnblockUser(user.blockRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/UnblockUser"
            body: "*"
          };
    }

    rpc ListInvitations(user.PersonalAssetsRequest) returns (common_types.ConvHeaderList) {
        option (google.api.http) = {
            post: "/ListInvitations"
            body: "*"
          };
    }

    rpc ListUserConvs (user.UserAssetsRequest) returns (common_types.ConvHeaderList) {
        option (google.api.http) = {
            post: "/ListUserConvs"
            body: "*"
          };
    }

    rpc ListUserReplies (user.UserAssetsRequest) returns (common_types.ReplyHeaderList) {
        option (google.api.http) = {
            post: "/ListUserReplies"
            body: "*"
          };
    }

    rpc ListUserUpvotes (user.UserAssetsRequest) returns (common_types.ConvHeaderList) {
        option (google.api.http) = {
            post: "/ListUserUpvotes"
            body: "*"
          };
    }

    rpc ListUserDownvotes (user.UserAssetsRequest) returns (common_types.ConvHeaderList) {
        option (google.api.http) = {
            post: "/ListUserDownvotes"
            body: "*"
          };
    }

    rpc GetConv (common_types.AuthenticatedObjectRequest) returns (visibility.Visibility) {
        option (google.api.http) = {
            post: "/GetConv"
            body: "*"
          };
    }

    rpc ModifyVisibility (visibility.ModifyVisibilityRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/ModifyVisibility"
            body: "*"
          };
    }

    rpc UpvoteConv (common_types.AuthenticatedObjectRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/UpvoteConv"
            body: "*"
          };
    }

    rpc DownvoteConv (common_types.AuthenticatedObjectRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/DownvoteConv"
            body: "*"
          };
    }

    //with token or not
    rpc GetVisibility (common_types.AuthenticatedObjectRequest) returns (conversation.Conversation) {
        option (google.api.http) = {
            post: "/GetVisibility"
            body: "*"
          };
    }

    rpc ModifyConv (conversation.Conversation) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/ModifyConv"
            body: "*"
          };
    }

    rpc DownvoteReply (common_types.AuthenticatedObjectRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/DownvoteReply"
            body: "*"
          };
    }

    rpc UpvoteReply (common_types.AuthenticatedObjectRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/UpvoteReply"
            body: "*"
          };
    }

    rpc SubmitReply (replies.ReplyRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/SubmitReply"
            body: "*"
          };
    }

    rpc GetReplies (replies.GetRepliesRequest) returns (replies.ReplyList) {
        option (google.api.http) = {
            post: "/GetReplies"
            body: "*"
          };
    }

    //with token or not
    rpc GetQASpace (common_types.AuthenticatedObjectRequest) returns (qa.QASpace) {
        option (google.api.http) = {
            post: "/GetQASpace"
            body: "*"
          };
    }

//for conv owner in edit mode
    rpc PreviewQASpace (common_types.AuthenticatedObjectRequest) returns (qa.QASpace) {
        option (google.api.http) = {
            post: "/PreviewQASpace"
            body: "*"
          };
    }

    rpc EditQASpace (qa.EditQASpaceRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/EditQASpace"
            body: "*"
          };
    }

    rpc GetNotifications (notifications.GetNotificationsRequest) returns (notifications.NotificationsResponse) {
        option (google.api.http) = {
            post: "/GetNotifications"
            body: "*"
          };
    }

    rpc UpdateWallet(common_types.AuthenticatedObjectRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/UpdateWallet"
            body: "*"
          };
    }

    rpc DeleteAccount(common_types.AuthenticatedRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/DeleteAccount"
            body: "*"
          };       
    }

    rpc Feedback(user.FeedbackRequest) returns (common_types.Empty) {
        option (google.api.http) = {
            post: "/Feedback"
            body: "*"
          };       
    }

    rpc UploadFile(common_types.FileUploadRequest) returns (common_types.FileUploadResponse) {
        option (google.api.http) = {
            post: "/UploadFile"
            body: "*"
          };     
    }

}
